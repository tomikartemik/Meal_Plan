// Generated by Dagger (https://dagger.dev).
package com.recepies.network.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import retrofit2.converter.scalars.ScalarsConverterFactory;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvidesScalarConvertorFactoryFactory implements Factory<ScalarsConverterFactory> {
  @Override
  public ScalarsConverterFactory get() {
    return providesScalarConvertorFactory();
  }

  public static NetworkModule_ProvidesScalarConvertorFactoryFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static ScalarsConverterFactory providesScalarConvertorFactory() {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.providesScalarConvertorFactory());
  }

  private static final class InstanceHolder {
    private static final NetworkModule_ProvidesScalarConvertorFactoryFactory INSTANCE = new NetworkModule_ProvidesScalarConvertorFactoryFactory();
  }
}
