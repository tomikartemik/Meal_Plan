// Generated by data binding compiler. Do not edit!
package com.recepies.foodrecipesq.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.recepies.foodrecipesq.R;
import com.recepies.foodrecipesq.presentation.widget.FlowLayout;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class RecipeFilterLayoutBinding extends ViewDataBinding {
  @NonNull
  public final TextView applyTv;

  @NonNull
  public final ConstraintLayout cardView;

  @NonNull
  public final ConstraintLayout cnsMain;

  @NonNull
  public final FlowLayout dietTypeFlowLayout;

  @NonNull
  public final TextView dietTypeTv;

  @NonNull
  public final NestedScrollView mScrollView;

  @NonNull
  public final FlowLayout mealTypeFlowLayout;

  @NonNull
  public final TextView mealTypeTv;

  protected RecipeFilterLayoutBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView applyTv, ConstraintLayout cardView, ConstraintLayout cnsMain,
      FlowLayout dietTypeFlowLayout, TextView dietTypeTv, NestedScrollView mScrollView,
      FlowLayout mealTypeFlowLayout, TextView mealTypeTv) {
    super(_bindingComponent, _root, _localFieldCount);
    this.applyTv = applyTv;
    this.cardView = cardView;
    this.cnsMain = cnsMain;
    this.dietTypeFlowLayout = dietTypeFlowLayout;
    this.dietTypeTv = dietTypeTv;
    this.mScrollView = mScrollView;
    this.mealTypeFlowLayout = mealTypeFlowLayout;
    this.mealTypeTv = mealTypeTv;
  }

  @NonNull
  public static RecipeFilterLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.recipe_filter_layout, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static RecipeFilterLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<RecipeFilterLayoutBinding>inflateInternal(inflater, R.layout.recipe_filter_layout, root, attachToRoot, component);
  }

  @NonNull
  public static RecipeFilterLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.recipe_filter_layout, null, false, component)
   */
  @NonNull
  @Deprecated
  public static RecipeFilterLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<RecipeFilterLayoutBinding>inflateInternal(inflater, R.layout.recipe_filter_layout, null, false, component);
  }

  public static RecipeFilterLayoutBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static RecipeFilterLayoutBinding bind(@NonNull View view, @Nullable Object component) {
    return (RecipeFilterLayoutBinding)bind(component, view, R.layout.recipe_filter_layout);
  }
}
