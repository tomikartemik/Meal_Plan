// Generated by Dagger (https://dagger.dev).
package com.recepies.foodrecipesq.domain.usecase;

import com.recepies.foodrecipesq.domain.repository.FavoriteRecipeRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetFavoriteRecipesUseCase_Factory implements Factory<GetFavoriteRecipesUseCase> {
  private final Provider<FavoriteRecipeRepository> favoriteRecipeRepositoryProvider;

  public GetFavoriteRecipesUseCase_Factory(
      Provider<FavoriteRecipeRepository> favoriteRecipeRepositoryProvider) {
    this.favoriteRecipeRepositoryProvider = favoriteRecipeRepositoryProvider;
  }

  @Override
  public GetFavoriteRecipesUseCase get() {
    return newInstance(favoriteRecipeRepositoryProvider.get());
  }

  public static GetFavoriteRecipesUseCase_Factory create(
      Provider<FavoriteRecipeRepository> favoriteRecipeRepositoryProvider) {
    return new GetFavoriteRecipesUseCase_Factory(favoriteRecipeRepositoryProvider);
  }

  public static GetFavoriteRecipesUseCase newInstance(
      FavoriteRecipeRepository favoriteRecipeRepository) {
    return new GetFavoriteRecipesUseCase(favoriteRecipeRepository);
  }
}
