// Generated by Dagger (https://dagger.dev).
package com.recepies.foodrecipesq.presentation.viewmodels;

import com.recepies.foodrecipesq.domain.usecase.GetFavoriteRecipesUseCase;
import com.recepies.foodrecipesq.domain.usecase.RemoveFavoriteRecipeUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FavoriteRecipeViewModel_Factory implements Factory<FavoriteRecipeViewModel> {
  private final Provider<GetFavoriteRecipesUseCase> getFavoriteRecipeUseCaseProvider;

  private final Provider<RemoveFavoriteRecipeUseCase> removeFavoriteRecipeUseCaseProvider;

  public FavoriteRecipeViewModel_Factory(
      Provider<GetFavoriteRecipesUseCase> getFavoriteRecipeUseCaseProvider,
      Provider<RemoveFavoriteRecipeUseCase> removeFavoriteRecipeUseCaseProvider) {
    this.getFavoriteRecipeUseCaseProvider = getFavoriteRecipeUseCaseProvider;
    this.removeFavoriteRecipeUseCaseProvider = removeFavoriteRecipeUseCaseProvider;
  }

  @Override
  public FavoriteRecipeViewModel get() {
    return newInstance(getFavoriteRecipeUseCaseProvider.get(), removeFavoriteRecipeUseCaseProvider.get());
  }

  public static FavoriteRecipeViewModel_Factory create(
      Provider<GetFavoriteRecipesUseCase> getFavoriteRecipeUseCaseProvider,
      Provider<RemoveFavoriteRecipeUseCase> removeFavoriteRecipeUseCaseProvider) {
    return new FavoriteRecipeViewModel_Factory(getFavoriteRecipeUseCaseProvider, removeFavoriteRecipeUseCaseProvider);
  }

  public static FavoriteRecipeViewModel newInstance(
      GetFavoriteRecipesUseCase getFavoriteRecipeUseCase,
      RemoveFavoriteRecipeUseCase removeFavoriteRecipeUseCase) {
    return new FavoriteRecipeViewModel(getFavoriteRecipeUseCase, removeFavoriteRecipeUseCase);
  }
}
