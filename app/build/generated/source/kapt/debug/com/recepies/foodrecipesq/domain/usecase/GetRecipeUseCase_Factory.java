// Generated by Dagger (https://dagger.dev).
package com.recepies.foodrecipesq.domain.usecase;

import com.recepies.foodrecipesq.domain.repository.GetRecipeRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetRecipeUseCase_Factory implements Factory<GetRecipeUseCase> {
  private final Provider<GetRecipeRepository> getRecipeRepositoryProvider;

  public GetRecipeUseCase_Factory(Provider<GetRecipeRepository> getRecipeRepositoryProvider) {
    this.getRecipeRepositoryProvider = getRecipeRepositoryProvider;
  }

  @Override
  public GetRecipeUseCase get() {
    return newInstance(getRecipeRepositoryProvider.get());
  }

  public static GetRecipeUseCase_Factory create(
      Provider<GetRecipeRepository> getRecipeRepositoryProvider) {
    return new GetRecipeUseCase_Factory(getRecipeRepositoryProvider);
  }

  public static GetRecipeUseCase newInstance(GetRecipeRepository getRecipeRepository) {
    return new GetRecipeUseCase(getRecipeRepository);
  }
}
