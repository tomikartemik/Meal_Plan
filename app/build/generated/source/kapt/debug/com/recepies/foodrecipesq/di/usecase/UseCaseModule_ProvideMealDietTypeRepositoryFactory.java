// Generated by Dagger (https://dagger.dev).
package com.recepies.foodrecipesq.di.usecase;

import com.recepies.foodrecipesq.domain.datasource.localDatasource.MealDietTypeDataSource;
import com.recepies.foodrecipesq.domain.repository.GetMealDietTypeRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UseCaseModule_ProvideMealDietTypeRepositoryFactory implements Factory<GetMealDietTypeRepository> {
  private final Provider<MealDietTypeDataSource> mealDietTypeDataSourceProvider;

  public UseCaseModule_ProvideMealDietTypeRepositoryFactory(
      Provider<MealDietTypeDataSource> mealDietTypeDataSourceProvider) {
    this.mealDietTypeDataSourceProvider = mealDietTypeDataSourceProvider;
  }

  @Override
  public GetMealDietTypeRepository get() {
    return provideMealDietTypeRepository(mealDietTypeDataSourceProvider.get());
  }

  public static UseCaseModule_ProvideMealDietTypeRepositoryFactory create(
      Provider<MealDietTypeDataSource> mealDietTypeDataSourceProvider) {
    return new UseCaseModule_ProvideMealDietTypeRepositoryFactory(mealDietTypeDataSourceProvider);
  }

  public static GetMealDietTypeRepository provideMealDietTypeRepository(
      MealDietTypeDataSource mealDietTypeDataSource) {
    return Preconditions.checkNotNullFromProvides(UseCaseModule.INSTANCE.provideMealDietTypeRepository(mealDietTypeDataSource));
  }
}
