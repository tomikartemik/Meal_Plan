// Generated by Dagger (https://dagger.dev).
package com.recepies.foodrecipesq.presentation.viewmodels;

import com.recepies.foodrecipesq.domain.usecase.GetMealDietTypeUseCase;
import com.recepies.foodrecipesq.domain.usecase.SaveUserPrefUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RecipeFilterViewModel_Factory implements Factory<RecipeFilterViewModel> {
  private final Provider<GetMealDietTypeUseCase> getMealDietTypeUseCaseProvider;

  private final Provider<SaveUserPrefUseCase> saveUserPrefUseCaseProvider;

  public RecipeFilterViewModel_Factory(
      Provider<GetMealDietTypeUseCase> getMealDietTypeUseCaseProvider,
      Provider<SaveUserPrefUseCase> saveUserPrefUseCaseProvider) {
    this.getMealDietTypeUseCaseProvider = getMealDietTypeUseCaseProvider;
    this.saveUserPrefUseCaseProvider = saveUserPrefUseCaseProvider;
  }

  @Override
  public RecipeFilterViewModel get() {
    return newInstance(getMealDietTypeUseCaseProvider.get(), saveUserPrefUseCaseProvider.get());
  }

  public static RecipeFilterViewModel_Factory create(
      Provider<GetMealDietTypeUseCase> getMealDietTypeUseCaseProvider,
      Provider<SaveUserPrefUseCase> saveUserPrefUseCaseProvider) {
    return new RecipeFilterViewModel_Factory(getMealDietTypeUseCaseProvider, saveUserPrefUseCaseProvider);
  }

  public static RecipeFilterViewModel newInstance(GetMealDietTypeUseCase getMealDietTypeUseCase,
      SaveUserPrefUseCase saveUserPrefUseCase) {
    return new RecipeFilterViewModel(getMealDietTypeUseCase, saveUserPrefUseCase);
  }
}
