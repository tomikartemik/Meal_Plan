// Generated by Dagger (https://dagger.dev).
package com.recepies.foodrecipesq.presentation.viewmodels;

import com.recepies.foodrecipesq.domain.usecase.GetRecipeJokeUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class JokeRecipeViewModel_Factory implements Factory<JokeRecipeViewModel> {
  private final Provider<GetRecipeJokeUseCase> recipeJokeUseCaseProvider;

  public JokeRecipeViewModel_Factory(Provider<GetRecipeJokeUseCase> recipeJokeUseCaseProvider) {
    this.recipeJokeUseCaseProvider = recipeJokeUseCaseProvider;
  }

  @Override
  public JokeRecipeViewModel get() {
    return newInstance(recipeJokeUseCaseProvider.get());
  }

  public static JokeRecipeViewModel_Factory create(
      Provider<GetRecipeJokeUseCase> recipeJokeUseCaseProvider) {
    return new JokeRecipeViewModel_Factory(recipeJokeUseCaseProvider);
  }

  public static JokeRecipeViewModel newInstance(GetRecipeJokeUseCase recipeJokeUseCase) {
    return new JokeRecipeViewModel(recipeJokeUseCase);
  }
}
