// Generated by Dagger (https://dagger.dev).
package com.recepies.foodrecipesq.domain.usecase;

import com.recepies.foodrecipesq.domain.repository.GetRecipeRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetRecipeJokeUseCase_Factory implements Factory<GetRecipeJokeUseCase> {
  private final Provider<GetRecipeRepository> recipeRepositoryProvider;

  public GetRecipeJokeUseCase_Factory(Provider<GetRecipeRepository> recipeRepositoryProvider) {
    this.recipeRepositoryProvider = recipeRepositoryProvider;
  }

  @Override
  public GetRecipeJokeUseCase get() {
    return newInstance(recipeRepositoryProvider.get());
  }

  public static GetRecipeJokeUseCase_Factory create(
      Provider<GetRecipeRepository> recipeRepositoryProvider) {
    return new GetRecipeJokeUseCase_Factory(recipeRepositoryProvider);
  }

  public static GetRecipeJokeUseCase newInstance(GetRecipeRepository recipeRepository) {
    return new GetRecipeJokeUseCase(recipeRepository);
  }
}
