// Generated by Dagger (https://dagger.dev).
package com.recepies.foodrecipesq;

import com.recepies.dbmodule.RecipeRoomDb;
import com.recepies.network.RetrofitClient;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RecipeApplication_MembersInjector implements MembersInjector<RecipeApplication> {
  private final Provider<RetrofitClient> retrofitClientProvider;

  private final Provider<RecipeRoomDb> recipeRoomDbProvider;

  public RecipeApplication_MembersInjector(Provider<RetrofitClient> retrofitClientProvider,
      Provider<RecipeRoomDb> recipeRoomDbProvider) {
    this.retrofitClientProvider = retrofitClientProvider;
    this.recipeRoomDbProvider = recipeRoomDbProvider;
  }

  public static MembersInjector<RecipeApplication> create(
      Provider<RetrofitClient> retrofitClientProvider,
      Provider<RecipeRoomDb> recipeRoomDbProvider) {
    return new RecipeApplication_MembersInjector(retrofitClientProvider, recipeRoomDbProvider);
  }

  @Override
  public void injectMembers(RecipeApplication instance) {
    injectRetrofitClient(instance, retrofitClientProvider.get());
    injectRecipeRoomDb(instance, recipeRoomDbProvider.get());
  }

  @InjectedFieldSignature("com.recepies.foodrecipesq.RecipeApplication.retrofitClient")
  public static void injectRetrofitClient(RecipeApplication instance,
      RetrofitClient retrofitClient) {
    instance.retrofitClient = retrofitClient;
  }

  @InjectedFieldSignature("com.recepies.foodrecipesq.RecipeApplication.recipeRoomDb")
  public static void injectRecipeRoomDb(RecipeApplication instance, RecipeRoomDb recipeRoomDb) {
    instance.recipeRoomDb = recipeRoomDb;
  }
}
