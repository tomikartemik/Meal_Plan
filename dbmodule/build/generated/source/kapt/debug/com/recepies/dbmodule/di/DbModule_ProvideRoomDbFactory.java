// Generated by Dagger (https://dagger.dev).
package com.recepies.dbmodule.di;

import android.content.Context;
import com.recepies.dbmodule.RecipeRoomDb;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DbModule_ProvideRoomDbFactory implements Factory<RecipeRoomDb> {
  private final Provider<Context> contextProvider;

  public DbModule_ProvideRoomDbFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public RecipeRoomDb get() {
    return provideRoomDb(contextProvider.get());
  }

  public static DbModule_ProvideRoomDbFactory create(Provider<Context> contextProvider) {
    return new DbModule_ProvideRoomDbFactory(contextProvider);
  }

  public static RecipeRoomDb provideRoomDb(Context context) {
    return Preconditions.checkNotNullFromProvides(DbModule.INSTANCE.provideRoomDb(context));
  }
}
